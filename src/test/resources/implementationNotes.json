[  
   {  
      "apiimplnote":[  
         {  
            "controllerName":"certified-product-controller",
            "endPointLink":[  
               {  
                  "implementationNote":"The required 'versionId' parameter filters the certified products to those assigned to that version.",
                  "link":"getCertifiedProductsByVersionUsingGET"
               },
               {  
                  "implementationNote":"ROLE_ADMIN or ROLE_ACB and have administrative authority on the ACB that uploaded the product",
                  "link":"getPendingCertifiedProductsUsingGET"
               },
               {  
                  "implementationNote":"ROLE_ADMIN or have ROLE_ACB and administrative authority on the ACB for each pending certified product is required",
                  "link":"rejectPendingCertifiedProductsUsingDELETE"
               },
               {  
                  "implementationNote":"ROLE_ADMIN or have ROLE_ACB and administrative authority on the ACB for each pending certified product is required",
                  "link":"getPendingCertifiedProductByIdUsingGET"
               },
               {  
                  "implementationNote":"ROLE_ADMIN or have ROLE_ACB and administrative authority on the ACB for each pending certified product is required",
                  "link":"rejectPendingCertifiedProductUsingDELETE"
               },
               {  
                  "implementationNote":"ROLE_ADMIN or have ROLE_ACB and administrative authority on the ACB for each pending certified product is required",
                  "link":"confirmPendingCertifiedProductUsingPOST"
               },
               {  
                  "implementationNote":"ROLE_ADMIN or user uploading the file must have ROLE_ACB and administrative authority on the ACB(s) specified in the file",
                  "link":"uploadUsingPOST"
               },
               {  
                  "implementationNote":"ROLE_ADMIN or user uploading the file must have ROLE_ACB and administrative authority on the ACB(s) specified in the file",
                  "link":"uploadUsingPOST"
               },
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN, or ROLE_ACB and have administrative authority on the ACB that certified the product",
                  "link":"updateCertifiedProductUsingPUT"
               }
            ]
         },
         {  
            "controllerName":"authentication-controller",
            "endPointLink":[  
               {  
                  "implementationNote":"Specifically, the Authorization header must have a value of 'Bearer token-that-gets-returned'.",
                  "link":"authenticateJSONUsingPOST"
               }
            ]
         },
         {  
            "controllerName":"activity-controller",
            "endPointLink":[  
               {  
                  "implementationNote":"ROLE_ADMIN AND ROLE_ONC_ADMIN may set the 'showDeleted' flag to true and see activity for all certification bodies including that have been deleted. ROLE_ACB can see their own information.",
                  "link":"activityForACBsUsingGET"
               },
               {  
                  "implementationNote":"ROLE_ADMIN AND ROLE_ONC_ADMIN may set the 'showDeleted' flag to true. ROLE_ACB can see their own information.",
                  "link":"activityForACBByIdUsingGET"
               },
               {  
                  "implementationNote":"Anonymous users are only allowed to see activity for public announcements.  All other roles can see private and public announcements.",
                  "link":"activityForAnnouncementByIdUsingGET"
               },
               {  
                  "implementationNote":"Only ROLE_ADMIN & ROLE_ONC",
                  "link":"activityForApiKeysUsingGET"
               },
               {  
                  "implementationNote":"ROLE_ADMIN AND ROLE_ONC may set the 'showDeleted' flag to true and see activity for all certification bodies including that have been deleted. ROLE_ATL can see their own information.",
                  "link":"activityforATLsUsingGET"
               },
               {  
                  "implementationNote":"ROLE_ADMIN AND ROLE_ONC may set the 'showDeleted' flag to true. ROLE_ATL can see their own information.",
                  "link":"activityForATLByIdUsingGET"
               },
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN, and ROLE_ACB (specific to own ACB)",
                  "link":"activityForPendingCertifiedProductsUsingGET"
               },
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN, and ROLE_ACB (specific to own ACB)",
                  "link":"activityForPendingCertifiedProductByIdUsingGET"
               },
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN, or ROLE_ONC_STAFF",
                  "link":"activityByUserUsingGET_1"
               },
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN, or ROLE_ONC_STAFF",
                  "link":"activityByUserUsingGET"
               },
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN, ROLE_ONC_STAFF (of ROLE_ONC_STAFF), ROLE_CMS_STAFF (of ROLE_CMS_STAFF Users), ROLE_ACB (of their own), and ROLE_ATL (of their own)",
                  "link":"activityForUsersUsingGET_1"
               },
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN, ROLE_ONC_STAFF (of ROLE_ONC_STAFF), ROLE_CMS_STAFF (of ROLE_CMS_STAFF Users), ROLE_ACB (of their own), and ROLE_ATL (of their own)",
                  "link":"activityForUsersUsingGET"
               }
            ]
         },
         {  
            "controllerName":"announcement-controller",
            "endPointLink":[  
               {  
                  "implementationNote":"Only ROLE_ADMIN and ROLE_ONC can retrieve future scheduled announcements and private announcements.  ROLE_ACB, ROLE_ATL, and ROLE_CMS_STAFF can retrieve private announcements.  All users can retrieve public announcements.",
                  "link":"getAnnouncementsUsingGET"
               },
               {  
                  "implementationNote":"Only ROLE_ADMIN and ROLE_ONC_ADMIN can retrieve future scheduled announcements and private announcements.  ROLE_ONC_STAFF, ROLE_ACB, ROLE_ATL, and ROLE_CMS_STAFF can retrieve private announcements.  All users can retrieve public announcements.",
                  "link":"getAnnouncementByIdUsingGET"
               },
               {  
                  "implementationNote":"Only ROLE_ADMIN and ROLE_ONC_ADMIN are able to update announcements",
                  "link":"updateAnnouncementUsingPUT"
               },
               {  
                  "implementationNote":"Only ROLE_ADMIN and ROLE_ONC_ADMIN are able to update announcements",
                  "link":"deleteAnnouncementUsingDELETE"
               }
            ]
         },
         {  
            "controllerName":"api-key-controller",
            "endPointLink":[  
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN, or ROLE_ONC_STAFF",
                  "link":"listKeysUsingGET"
               },
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN, or ROLE_ONC_STAFF",
                  "link":"listActivityUsingGET"
               },
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN, or ROLE_ONC_STAFF",
                  "link":"listActivityByKeyUsingGET"
               },
               {  
                  "implementationNote":"ROLE_ADMIN and ROLE_ONC_ADMIN",
                  "link":"revokeUsingDELETE"
               }
            ]
         },
         {  
            "controllerName":"certification-body-controller",
            "endPointLink":[  
               {  
                  "implementationNote":"Everyone can see all active.  ROLE_ADMIN and ROLE_ONC_ADMIN can see deleted as well",
                  "link":"getAcbsUsingGET"
               },
               {  
                  "implementationNote":"ROLE_ADMIN and ROLE_ONC_ADMIN",
                  "link":"createAcbUsingPOST"
               },
               {  
                  "implementationNote":"Must either have ROLE_ADMIN, ROLE_ONC_ADMIN, or have ROLE_ACB for the ACB with the provided ID",
                  "link":"getAcbByIdUsingGET"
               },
               {  
                  "implementationNote":"Must either have ROLE_ADMIN, ROLE_ONC_ADMIN or have ROLE_ACB to update an existing ACB",
                  "link":"updateAcbUsingPUT"
               },
               {  
                  "implementationNote":"Must have ROLE_ADMIN, ROLE_ONC_ADMIN, ROLE_ONC_STAFF or have administrative or read authority on the specified ACB",
                  "link":"getUsersUsingGET"
               },
               {  
                  "implementationNote":"Must have ROLE_ADMIN, ROLE_ONC_ADMIN, or ROLE_ACB and have administrative authority on the specified ACB, and 'ADMIN',  'READ' or 'DELETE' in as the 'authority' field",
                  "link":"createAcbUsingPOST"
               },
               {  
                  "implementationNote":"Must have ROLE_ADMIN or ROLE_ACB and have administrative authority on the specified ACB",
                  "link":"deleteUserFromAcbUsingDELETE"
               }
            ]
         },
         {  
            "controllerName":"developer-controller",
            "endPointLink":[  
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN, ROLE_ONC_STAFF, and ROLE_ACB can see deleted developers.  Everyone else can only see active developers.",
                  "link":"getDevelopersUsingGET"
               },
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN, or ROLE_ACB",
                  "link":"updateDeveloperUsingPUT"
               }
            ]
         },
         {  
            "controllerName":"product-controller",
            "endPointLink":[  
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN, or ROLE_ACB",
                  "link":"splitProductUsingPOST"
               }
            ]
         },
         {  
            "controllerName":"product-version-controller",
            "endPointLink":[  
               {  
                  "implementationNote":"Must have ROLE_ADMIN to merge or ROLE_ACB and have administrative authority on the specified ACB to do all actions except merge",
                  "link":"updateVersionUsingPUT"
               }
            ]
         },
         {  
            "controllerName":"scheduler-controller",
            "endPointLink":[  
               {  
                  "implementationNote":"Must have ROLE_ADMIN, ROLE_ONC_ADMIN, or ROLE_ACB and have administrative authority on the specified ACB",
                  "link":"getAllJobsUsingGET_1"
               },
               {  
                  "implementationNote":"Must have ROLE_ADMIN, ROLE_ONC_ADMIN, or ROLE_ACB and have administrative authority on the specified ACB",
                  "link":"getAllTriggersUsingGET"
               },
               {  
                  "implementationNote":"Must have ROLE_ADMIN or ROLE_ACB and have administrative authority on the specified ACB",
                  "link":"createTriggerUsingPOST"
               },
               {  
                  "implementationNote":"Must have ROLE_ADMIN or ROLE_ACB and have administrative authority on the specified ACB",
                  "link":"updateTriggerUsingPUT"
               },
               {  
                  "implementationNote":"Must have ROLE_ADMIN or ROLE_ACB and have administrative authority on the specified ACB",
                  "link":"deleteTriggerUsingDELETE"
               }
            ]
         },
         {  
            "controllerName":"search-view-controller",
            "endPointLink":[  
               {  
                  "implementationNote":"ROLE_ADMIN or ROLE_ONC_ADMIN",
                  "link":"updateFuzzyChoicesForSearchingUsingPUT"
               }
            ]
         },
         {  
            "controllerName":"job-controller",
            "endPointLink":[  
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN",
                  "link":"getAllJobsUsingGET"
               }
            ]
         },
         {  
            "controllerName":"surveillance-controller",
            "endPointLink":[  
               {  
                  "implementationNote":"ROLE_ADMIN or ROLE_ACB and administrative authority on the ACB associated with the certified product is required",
                  "link":"createSurveillanceUsingPOST"
               },
               {  
                  "implementationNote":"ROLE_ADMIN or ROLE_ACB and administrative authority on the ACB associated with the certified product is required",
                  "link":"getAllowedPendingSurveillanceUsingGET"
               },
               {  
                  "implementationNote":"ROLE_ADMIN or ROLE_ACB and administrative authority on the ACB associated with the certified product is required",
                  "link":"confirmPendingSurveillanceUsingPOST"
               },
               {  
                  "implementationNote":"ROLE_ADMIN or ROLE_ACB and have administrative authority on the specified ACB for each pending surveillance is required",
                  "link":"rejectPendingSurveillanceUsingDELETE"
               },
               {  
                  "implementationNote":"User uploading the file must have either ROLE_ADMIN, ROLE_ONC_ADMIN, or ROLE_ACB and administrative authority on the ACB(s) responsible for the product(s) in the file",
                  "link":"uploadUsingPOST_1"
               },
               {  
                  "implementationNote":"User uploading the file must have either ROLE_ADMIN, ROLE_ONC_ADMIN, or ROLE_ACB and associated with the certified product is required",
                  "link":"updateSurveillanceUsingPUT"
               },
               {  
                  "implementationNote":"Must have ROLE_ACB and administrative authority on the ACB associated with the certified product is required",
                  "link":"deleteSurveillanceUsingDELETE"
               },
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN, or ROLE_ACB and administrative authority on the associated ACB",
                  "link":"deleteNonconformityDocumentFromSurveillanceUsingDELETE"
               },
               {  
                  "implementationNote":"User uploading the file must have either ROLE_ADMIN, ROLE_ONC_ADMIN, or ROLE_ACB and administrative authority on the associated ACB",
                  "link":"uploadNonconformityDocumentUsingPOST"
               }
            ]
         },
         {  
            "controllerName":"testing-lab-controller",
            "endPointLink":[  
               {  
                  "implementationNote":"ROLE_ADMIN or ROLE_ONC_ADMIN to see deleted ATLs (if 'showDeleted' to true)",
                  "link":"getAtlsUsingGET"
               },
               {  
                  "implementationNote":"ROLE_ADMIN or ROLE_ONC_ADMIN to create a new testing lab",
                  "link":"createAtlUsingPOST"
               },
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN or have either read oradministrative authority on the testing lab with the ID specified",
                  "link":"getAtlByIdUsingGET"
               },
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN, or ROLE_ATL and have administrative authority on the testing lab whose data is being updated",
                  "link":"updateAtlUsingPUT"
               },
               {  
                  "implementationNote":"User uploading the file must have either ROLE_ADMIN, ROLE_ONC_ADMIN, or ROLE_ACB and administrative authority on the ACB(s) responsible for the product(s) in the file",
                  "link":"uploadUsingPOST_1"
               },
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN, ROLE_ONC_STAFF, or have administrative or read authority on the specified ATL",
                  "link":"getUsersUsingGET_1"
               },
               {  
                  "implementationNote":"ROLE_ADMIN, ROLE_ONC_ADMIN, or ROLE_ATL and have administrative authority on the specified ATL",
                  "link":"deleteUserFromAtlUsingDELETE"
               }
            ]
         },
         {  
            "controllerName":"user-management-controller",
            "endPointLink":[  
               {  
                  "implementationNote":"ROLE_ADMIN and ONC_ROLE_ADMIN can see all users.  ROLE_ACB, ROLE_ATL, ROLE_CMS_STAFF, and ROLE_ONC_STAFF can see their self.",
                  "link":"getUsersUsingGET_2"
               },
               {  
                  "implementationNote":"ROLE_ADMIN and ONC_ROLE_ADMIN can invite users to any organization.  ROLE_ACB and ROLE_ATL can add users to their own organization.",
                  "link":"inviteUserUsingPOST"
               },
               {  
                  "implementationNote":"ROLE_ADMIN and ONC_ROLE_ADMIN",
                  "link":"deleteUserUsingDELETE"
               },
               {  
                  "implementationNote":"ROLE_ADMIN and ONC_ROLE_ADMIN",
                  "link":"authorizeUserUsingPOST"
               },
               {  
                  "implementationNote":"ROLE_ADMIN and ONC_ROLE_ADMIN",
                  "link":"grantUserRoleUsingPOST"
               },
               {  
                  "implementationNote":"ROLE_ADMIN and ONC_ROLE_ADMIN",
                  "link":"revokeUserRoleUsingDELETE"
               }
            ]
         }
      ]
   }
]